import { DefineAttributes } from "../common/defineAttributes";

export interface ItemProperties {
  id: number;
  ver6: number;
  dwID: string;
  szName: string;
  szNameId: string;
  dwPackMax: number;
  dwItemKind1: string;
  dwItemKind2: string;
  dwItemKind3: string;
  dwItemJob: string;
  bPermanence: boolean;
  dwUseable: boolean;
  dwItemSex: number;
  dwCost: number;
  dwLimitLevel1: number;
  dwParts: string;
  dwAbilityMin: number;
  dwAbilityMax: number;
  eItemType: string;
  dwItemLV: number;
  dwItemRare: number;
  dwAttackSpeed: number;
  dwDestParam1: number;
  dwDestParam2: number;
  dwDestParam3: number;
  nAdjParamVal1: number;
  nAdjParamVal2: number;
  nAdjParamVal3: number;
  dwCircleTime: number;
  dwSfxObj: number;
  dwSfxObj2: number;
  dwSfxObj3: number;
  dwSfxObj4: number;
  dwSfxObj5: number;
  dwSkillReady: number;
  dwWeaponType: number;
  dwItemAtkOrder1: number;
  dwItemAtkOrder2: number;
  dwItemAtkOrder3: number;
  dwItemAtkOrder4: number;
  dwSkillReadyType: number;
  dwReferStat1: string;
  dwAddSkillMin: number;
  dwAddSkillMax: number;
  dwReqMp: number;
  dwReqFp: number;
  bCharged: boolean;
  dwReferStat2: number;
  dwReferTarget1: number;
  dwReferTarget2: number;
  dwReferValue1: number;
  dwReferValue2: number;
  dwFlightLimit: number;
  dwFFuelReMax: number;
  dwAFuelReMax: number;
  dwLimitLevel: number;
  dwReflect: number;
  szIcon: string;
  dwQuestID: number;
  szTextFile: string;
  szComment: string;
  readonly stackable?: boolean;
  readonly Params?: Readonly<Record<DefineAttributes, number>>;
}